"""
Django settings for framework project.
Generated by 'django-admin startproject' using Django 2.1.3.
For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import environ
import datetime
from framework import override_settings

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# STATIC_ROOT = os.path.join(BASE_DIR, "static")
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = '/media/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

env = environ.Env()


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm9rorp2qa!(d1+pk1b)4pv1-7@6f^ps*5@r_mh@3+t9xx857y@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'i69app.com', '83.229.87.237', '178.18.253.100',
                 '13.36.97.234', 'api.i69app.com', 'admin.i69app.com', 'www.i69app.com', 'i69social.com']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'graphene_django',
    'django_extensions', # for `python manage.py runserver_plus` command
    'easy_select2',
    'import_export',
    'django_filters',
    'ckeditor',
    'user',
    'reports',
    "corsheaders",
    'social_django',
    'purchase',
    'gallery',
    'chatapp',
    'rest_framework',
    'rest_framework.authtoken',
    'dj_rest_auth',
    'defaultPicker',
    'whitenoise'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

AUTH_USER_MODEL = 'user.User'

ROOT_URLCONF = 'framework.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), os.path.join(BASE_DIR, 'static')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social.apps.django_app.context_processors.backends',
                'social.apps.django_app.context_processors.login_redirect'
            ],
        },
    },
]

WSGI_APPLICATION = 'framework.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
if env.db('DATABASE_URL', ''):
    DATABASES = {
        'default': env.db('DATABASE_URL')
    }
else:
    DATABASES = {
        'default': override_settings.DATABASE
    }


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

SOCIAL_AUTH_USER_MODEL = 'user.User'

GRAPHENE = {
    'SCHEMA': 'framework.schema.schema',
    'MIDDLEWARE': [
        'graphql_jwt.middleware.JSONWebTokenMiddleware',
    ],
}

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'graphql_jwt.backends.JSONWebTokenBackend',
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.twitter.TwitterOAuth',

]

# CHANNEL_LAYERS = {
#      "default": {
#      "BACKEND": "asgi_redis.RedisChannelLayer",
#      "CONFIG": {
#         "hosts": [(redis_host, 6379)],
#    },
#    "ROUTING": "routing.application",
#   },
# }


SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '403376972935'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '07z1nGIdZap-3kARgx256wJ6'

SOCIAL_AUTH_FACEBOOK_KEY = '1610603699070152'  # App ID
SOCIAL_AUTH_FACEBOOK_SECRET = 'cc752b4e78233fe6df148dc6305fb6d0'  # App Secret
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id,name,email',
}

SOCIAL_AUTH_TWITTER_KEY = '4RJyDYEnDosgBC52kyWsgvqRX'
SOCIAL_AUTH_TWITTER_SECRET = 'PQIHNFyW2f9cv6pwbq8p54mjVQ7cusIqjDBD7TLqEOgbc2B8RE'
SOCIAL_AUTH_TWITTER_CALLBACK_URLS = 'https://api.i69app.com/signin-twitter'


ONESIGNAL_REST_API_KEY = 'MWYyMTYwMzAtMGRiNC00YTYyLTliZDItNjEzMTU3YjI0ZjZm'
ONESIGNAL_APP_ID = '0be9bbe8-af94-4498-8c96-36cc96604f41'

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'dj_rest_auth.jwt_auth.JWTCookieAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',

    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 100,
    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(hours=1)
}

CORS_ALLOWED_ORIGINS = ['http://localhost:3000', 'https://i69app.com', 'https://admin.i69app.com', 'https://i69social-admin.vercel.app']
CORS_ALLOWED_METHODS = ['GET','POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']
REST_AUTH_SERIALIZERS = {'JWT_TOKEN_CLAIMS_SERIALIZER': 'user.serializers.MyTokenObtainPairSerializer'}
